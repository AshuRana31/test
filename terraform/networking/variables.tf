# AWS Multi-Environment Networking Infrastructure Variables
# Generated by Backstage AWS Networking Template
# Single Terraform configuration with environment-specific .tfvars files

# Project Information
variable "project_name" {
  description = "Name of the project"
  type        = string
  
  validation {
    condition     = can(regex("^[a-z0-9][a-z0-9-]*[a-z0-9]$", var.project_name))
    error_message = "Project name must be lowercase alphanumeric with hyphens, starting and ending with alphanumeric characters."
  }
}

variable "client_name" {
  description = "Name of the client or organization"
  type        = string
}

variable "description" {
  description = "Description of the project"
  type        = string
  default     = ""
}

# Environment Configuration
variable "environment" {
  description = "Environment name (development, staging, uat, production)"
  type        = string
  
  validation {
    condition     = contains(["development", "staging", "uat", "production"], var.environment)
    error_message = "Environment must be one of: development, staging, uat, production."
  }
}

# AWS Configuration
variable "region" {
  description = "AWS region for deployment"
  type        = string
  default     = "ap-southeast-2"
}

variable "availability_zones" {
  description = "Number of availability zones to use"
  type        = number
  default     = 2
  
  validation {
    condition     = var.availability_zones >= 2 && var.availability_zones <= 3
    error_message = "Number of availability zones must be 2 or 3."
  }
}

# VPC Configuration
variable "vpc_cidr" {
  description = "CIDR block for the VPC"
  type        = string
  
  validation {
    condition     = can(cidrhost(var.vpc_cidr, 0))
    error_message = "Must be a valid CIDR block."
  }
}

# Network Architecture
variable "network_tier" {
  description = "Network architecture tier (basic, standard, advanced)"
  type        = string
  default     = "standard"
  
  validation {
    condition     = contains(["basic", "standard", "advanced"], var.network_tier)
    error_message = "Network tier must be one of: basic, standard, advanced."
  }
}

# NAT Gateway Configuration
variable "enable_nat_gateway" {
  description = "Enable NAT Gateway for private subnet internet access"
  type        = bool
  default     = false
}

# VPC Flow Logs
variable "enable_vpc_flow_logs" {
  description = "Enable VPC Flow Logs for network monitoring"
  type        = bool
  default     = false
}

# VPC Endpoints
variable "enable_vpc_endpoints" {
  description = "Enable VPC endpoints for AWS services (S3, ECR)"
  type        = bool
  default     = false
}

# Optional: Account ID for cross-account scenarios
variable "account_id" {
  description = "AWS Account ID (optional, for cross-account deployments)"
  type        = string
  default     = ""
  
  validation {
    condition     = var.account_id == "" || can(regex("^[0-9]{12}$", var.account_id))
    error_message = "Account ID must be a 12-digit number or empty string."
  }
}