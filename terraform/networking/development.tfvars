
# Development Environment Configuration
# Generated by Backstage Advanced AWS Networking Template
# Project: {{ values.projectName }}

# Project Information
project_name       = "{{ values.projectName }}"
client_name        = "{{ values.clientName }}"
description        = "{{ values.description }}"
cost_center        = "{{ values.costCenter | default('') }}"
technical_contact  = "{{ values.technicalContact }}"
deployment_timeline = "{{ values.deploymentTimeline | default('1-week') }}"

# Environment Configuration
environment      = "{{ values.devEnvironmentName | default('development') }}"
account_id       = "{{ values.devAccountId }}"

# Regional Configuration
region             = "{{ values.region }}"
availability_zones = {{ values.availabilityZones | default(2) }}
multi_region_deployment = {{ values.multiRegionDeployment | default(false) }}

# VPC Configuration
vpc_cidr              = "{{ values.devVpcCidr | default('10.0.0.0/16') }}"
enable_dns_hostnames  = {{ values.devDnsHostnames | default(true) }}
enable_dns_resolution = {{ values.devDnsResolution | default(true) }}
enable_ipv6          = {{ values.enableIpv6 | default(false) }}

# Subnet Configuration
public_subnet_count    = {{ values.publicSubnetCount | default(2) }}
private_subnet_count   = {{ values.privateSubnetCount | default(2) }}
database_subnet_count  = {{ values.databaseSubnetCount | default(2) }}
subnet_sizing_strategy = "{{ values.subnetSizingStrategy | default('equal') }}"
map_public_ip_on_launch = {{ values.mapPublicIpOnLaunch | default(true) }}

# Gateway Configuration
create_internet_gateway = {{ values.createInternetGateway | default(true) }}
nat_gateway_strategy   = "{{ values.natGatewayStrategy | default('single') }}"
nat_gateway_type       = "{{ values.natGatewayType | default('gateway') }}"
enable_vpn_gateway     = {{ values.enableVpnGateway | default(false) }}
vpn_gateway_type       = "{{ values.vpnGatewayType | default('ipsec.1') }}"

# Advanced Networking Features
enable_vpc_peering           = {{ values.enableVpcPeering | default(false) }}
create_default_security_groups = {{ values.createDefaultSecurityGroups | default(true) }}
security_group_templates     = {{ values.securityGroupTemplates | default([]) | tojson }}
use_custom_nacls            = {{ values.useCustomNacls | default(false) }}
enable_vpc_endpoints        = {{ values.enableVpcEndpoints | default(false) }}
vpc_endpoint_services       = {{ values.vpcEndpointServices | default([]) | tojson }}

# Monitoring and Logging
enable_vpc_flow_logs         = {{ values.devVpcFlowLogs | default(false) }}
vpc_flow_logs_destination    = "{{ values.vpcFlowLogsDestination | default('cloudwatch') }}"
vpc_flow_logs_traffic_type   = "{{ values.vpcFlowLogsTrafficType | default('ALL') }}"
enable_cloudwatch_monitoring = {{ values.enableCloudWatchMonitoring | default(true) }}
create_cloudwatch_alerts     = {{ values.createCloudWatchAlerts | default(false) }}

# Tagging
custom_tags = {{ values.customTags | default({}) | tojson }}
tag_inheritance_strategy = "{{ values.tagInheritanceStrategy | default('merge') }}"

# GitHub Actions
enable_github_actions = {{ values.enableGithubActions | default(true) }}

