name: Terraform CI/CD

on:
  pull_request:
    branches: [ main ]
    paths: [ 'terraform/**' ]
  push:
    branches: [ main ]
    paths: [ 'terraform/**' ]
  workflow_dispatch:

env:
  TF_VERSION: '1.5.0'
  AWS_REGION: 'us-east-1'
  AWS_ACCOUNT_ID: '038751964618'

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform-plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          role-session-name: GitHubActions-TerraformPlan
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: |
          cd terraform
          terraform init \
            -backend-config="bucket=${{ env.AWS_ACCOUNT_ID }}-terraform-state" \
            -backend-config="key=infrastructure/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ env.AWS_ACCOUNT_ID }}-terraform-locks"

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -out=tfplan

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const output = `## Terraform Plan Results
            
            âœ… Terraform plan completed successfully
            
            **Region:** \`${{ env.AWS_REGION }}\`
            **Account:** \`${{ env.AWS_ACCOUNT_ID }}\`
            
            To apply these changes, merge this PR.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

  terraform-apply:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          role-session-name: GitHubActions-TerraformApply
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: |
          cd terraform
          terraform init \
            -backend-config="bucket=${{ env.AWS_ACCOUNT_ID }}-terraform-state" \
            -backend-config="key=infrastructure/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ env.AWS_ACCOUNT_ID }}-terraform-locks"

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve
